[1mdiff --git a/.vscode/settings.json b/.vscode/settings.json[m
[1mnew file mode 100644[m
[1mindex 0000000..489cd9c[m
[1m--- /dev/null[m
[1m+++ b/.vscode/settings.json[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "cSpell.words": [[m
[32m+[m[32m        "kagglehub"[m
[32m+[m[32m    ][m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/README.md b/README.md[m
[1mindex ee828e0..ff93f3e 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1 +1,87 @@[m
[31m-# sentiment-analysis-twitter-ml[m
\ No newline at end of file[m
[32m+[m[32m# üê¶ Twitter Sentiment Analysis App[m
[32m+[m
[32m+[m[32mA full-stack AI-powered web app that analyzes the **sentiment of any tweet** using a trained machine learning model. Built with **React**, **FastAPI**, and **Scikit-learn**.[m
[32m+[m
[32m+[m[32m<div align="center">[m
[32m+[m[32m  <img src="https://img.shields.io/badge/Machine%20Learning-Scikit--Learn-orange?logo=scikit-learn" />[m
[32m+[m[32m  <img src="https://img.shields.io/badge/Backend-FastAPI-green?logo=fastapi" />[m
[32m+[m[32m  <img src="https://img.shields.io/badge/Frontend-React-blue?logo=react" />[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## üöÄ Demo[m
[32m+[m
[32m+[m[32m> üéØ Enter a tweet and get instant sentiment prediction (Positive/Negative)[m
[32m+[m
[32m+[m[32m![demo](demo.gif) <!-- Replace with your actual demo.gif or screenshot -->[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## üß† Tech Stack[m
[32m+[m
[32m+[m[32m| Layer        | Technology         |[m
[32m+[m[32m|--------------|--------------------|[m
[32m+[m[32m| üß† ML Model   | Logistic Regression |[m
[32m+[m[32m| üìä Text Vectorization | TF-IDF             |[m
[32m+[m[32m| ‚öô Backend    | FastAPI + Joblib    |[m
[32m+[m[32m| üíª Frontend  | React + Fetch API   |[m
[32m+[m[32m| üîó Integration | CORS, REST API     |[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## üìÅ Folder Structure[m
[32m+[m
[32m+[m[32msentiment-analysis-twiter-ml/[m
[32m+[m[32m‚îú‚îÄ‚îÄ backend/[m
[32m+[m[32m‚îÇ ‚îú‚îÄ‚îÄ main.py[m
[32m+[m[32m‚îÇ ‚îú‚îÄ‚îÄ model/[m
[32m+[m[32m‚îÇ ‚îÇ ‚îú‚îÄ‚îÄ logistic_model.pkl[m
[32m+[m[32m‚îÇ ‚îÇ ‚îî‚îÄ‚îÄ tfidf_vectorizer.pkl[m
[32m+[m[32m‚îÇ ‚îî‚îÄ‚îÄ requirements.txt[m
[32m+[m[32m‚îú‚îÄ‚îÄ sentiment-frontend/[m
[32m+[m[32m‚îÇ ‚îú‚îÄ‚îÄ App.js[m
[32m+[m[32m‚îÇ ‚îú‚îÄ‚îÄ index.js[m
[32m+[m[32m‚îÇ ‚îú‚îÄ‚îÄ App.css[m
[32m+[m[32m‚îÇ ‚îî‚îÄ‚îÄ package.json[m
[32m+[m[32m‚îú‚îÄ‚îÄ notebook/[m
[32m+[m[32m| ‚îî‚îÄ‚îÄ eda.ipynb[m
[32m+[m[32m‚îî‚îÄ‚îÄ README.md[m
[32m+[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## üí° How it Works[m
[32m+[m
[32m+[m[32m1. **User** enters a tweet on the web interface.[m
[32m+[m[32m2. The **React frontend** sends a POST request to FastAPI backend.[m
[32m+[m[32m3. The **FastAPI server**:[m
[32m+[m[32m   - Transforms the text using the `tfidf_vectorizer.pkl`[m
[32m+[m[32m   - Predicts sentiment using `logistic_model.pkl`[m
[32m+[m[32m4. The **prediction** is returned and displayed: `Positive` or `Negative`.[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## üì¶ Installation & Run Locally[m
[32m+[m
[32m+[m[32m### ‚öô Backend (FastAPI)[m
[32m+[m[32m```bash[m
[32m+[m[32mcd backend[m
[32m+[m[32mpip install -r requirements.txt[m
[32m+[m[32muvicorn main:app --reload[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### üíª Frontend (React)[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mcd sentiment-frontend[m
[32m+[m[32mnpm install[m
[32m+[m[32mnpm start[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mMake sure your backend (FastAPI) is running on http://localhost:8000[m
[32m+[m[32mThe frontend will run on http://localhost:3000[m
[32m+[m
[32m+[m
[32m+[m[32m### Author[m
[32m+[m[32m## Amardeep[m
[1mdiff --git a/backend/main.py b/backend/main.py[m
[1mnew file mode 100644[m
[1mindex 0000000..ab14301[m
[1m--- /dev/null[m
[1m+++ b/backend/main.py[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mfrom fastapi import FastAPI[m
[32m+[m[32mfrom pydantic import BaseModel[m
[32m+[m[32mimport joblib[m
[32m+[m[32mfrom fastapi.middleware.cors import CORSMiddleware[m
[32m+[m
[32m+[m[32mmodel=joblib.load("model/logistic_model.pkl")[m
[32m+[m[32mvectorizer=joblib.load("model/tfidf_vectorizer.pkl")[m
[32m+[m
[32m+[m[32mapp=FastAPI()[m
[32m+[m
[32m+[m[32mapp.add_middleware([m
[32m+[m[32m    CORSMiddleware,[m
[32m+[m[32m    allow_origins=["http://localhost:3000"],[m[41m  [m
[32m+[m[32m    allow_credentials=True,[m
[32m+[m[32m    allow_methods=["*"],[m
[32m+[m[32m    allow_headers=["*"],[m
[32m+[m[32m)[m
[32m+[m
[32m+[m
[32m+[m[32mclass TextInput(BaseModel):[m
[32m+[m[32m    text: str[m
[32m+[m
[32m+[m[32m@app.post("/predict")[m
[32m+[m[32mdef sentiment(data :TextInput):[m
[32m+[m[32m    vector = vectorizer.transform([data.text])[m
[32m+[m[32m    prediction=model.predict(vector)[0][m
[32m+[m[32m    return {"sentiment":"Positive" if prediction==1 else "Negative"}[m
[1mdiff --git a/backend/model/logistic_model.pkl b/backend/model/logistic_model.pkl[m
[1mnew file mode 100644[m
[1mindex 0000000..c231992[m
Binary files /dev/null and b/backend/model/logistic_model.pkl differ
[1mdiff --git a/backend/model/tfidf_vectorizer.pkl b/backend/model/tfidf_vectorizer.pkl[m
[1mnew file mode 100644[m
[1mindex 0000000..8296a1a[m
Binary files /dev/null and b/backend/model/tfidf_vectorizer.pkl differ
[1mdiff --git a/backend/requirements.txt b/backend/requirements.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..76eb705[m
[1m--- /dev/null[m
[1m+++ b/backend/requirements.txt[m
[36m@@ -0,0 +1,312 @@[m
[32m+[m[32mabsl-py==2.1.0[m
[32m+[m[32m-e git+https://github.com/raga-ai-hub/agentneo.git@cbe5d39140fe9c8fd3a202c445d4d39eed7abefe#egg=agentneo[m
[32m+[m[32maiofiles==23.2.1[m
[32m+[m[32maiohappyeyeballs==2.4.4[m
[32m+[m[32maiohttp==3.11.11[m
[32m+[m[32maiosignal==1.3.2[m
[32m+[m[32maltair==5.4.1[m
[32m+[m[32mannotated-types==0.7.0[m
[32m+[m[32manyio==4.6.0[m
[32m+[m[32margon2-cffi==23.1.0[m
[32m+[m[32margon2-cffi-bindings==21.2.0[m
[32m+[m[32marrow==1.3.0[m
[32m+[m[32massemblyai==0.34.0[m
[32m+[m[32masttokens==2.4.1[m
[32m+[m[32mastunparse==1.6.3[m
[32m+[m[32masync-generator==1.10[m
[32m+[m[32masync-lru==2.0.4[m
[32m+[m[32masync-timeout==4.0.3[m
[32m+[m[32mattrs==22.2.0[m
[32m+[m[32maudioread==3.0.1[m
[32m+[m[32mav==12.3.0[m
[32m+[m[32mbabel==2.16.0[m
[32m+[m[32mbeautifulsoup4==4.11.1[m
[32m+[m[32mblack==24.10.0[m
[32m+[m[32mbleach==6.1.0[m
[32m+[m[32mblinker==1.9.0[m
[32m+[m[32mcachelib==0.9.0[m
[32m+[m[32mcertifi==2022.12.7[m
[32m+[m[32mcffi==1.15.1[m
[32m+[m[32mchardet==3.0.4[m
[32m+[m[32mcharset-normalizer==3.0.1[m
[32m+[m[32mclick==8.1.3[m
[32m+[m[32mcolorama==0.4.6[m
[32m+[m[32mcoloredlogs==15.0.1[m
[32m+[m[32mcomm==0.2.2[m
[32m+[m[32mcomtypes==1.1.14[m
[32m+[m[32mcontourpy==1.0.6[m
[32m+[m[32mcoverage==7.6.10[m
[32m+[m[32mctranslate2==4.5.0[m
[32m+[m[32mcycler==0.11.0[m
[32m+[m[32mdatasets==3.4.1[m
[32m+[m[32mdebugpy==1.8.7[m
[32m+[m[32mdecorator==4.4.2[m
[32m+[m[32mdefusedxml==0.7.1[m
[32m+[m[32mdill==0.3.8[m
[32m+[m[32mdistlib==0.3.8[m
[32m+[m[32mdistro==1.9.0[m
[32m+[m[32mdocopt==0.6.2[m
[32m+[m[32melevenlabs==0.3.0b0[m
[32m+[m[32menum34==1.1.10[m
[32m+[m[32mexceptiongroup==1.1.0[m
[32m+[m[32mexecuting==2.0.1[m
[32m+[m[32mfastapi==0.115.3[m
[32m+[m[32mfaster-whisper==1.0.3[m
[32m+[m[32mfastjsonschema==2.20.0[m
[32m+[m[32mffmpy==0.4.0[m
[32m+[m[32mfilelock==3.13.1[m
[32m+[m[32mflake8==7.1.1[m
[32m+[m[32mFlask==3.0.3[m
[32m+[m[32mFlask-Caching==2.3.0[m
[32m+[m[32mFlask-Cors==4.0.2[m
[32m+[m[32mFlask-Login==0.6.2[m
[32m+[m[32mFlask-SQLAlchemy==3.0.3[m
[32m+[m[32mflatbuffers==24.3.25[m
[32m+[m[32mfonttools==4.38.0[m
[32m+[m[32mfqdn==1.5.1[m
[32m+[m[32mfrozenlist==1.5.0[m
[32m+[m[32mfsspec==2024.9.0[m
[32m+[m[32mgast==0.6.0[m
[32m+[m[32mgoogle-pasta==0.2.0[m
[32m+[m[32mgoogletrans==3.1.0a0[m
[32m+[m[32mGPUtil==1.4.0[m
[32m+[m[32mgradio==3.43.1[m
[32m+[m[32mgradio_client==0.5.0[m
[32m+[m[32mgreenlet==2.0.2[m
[32m+[m[32mgrpcio==1.67.1[m
[32m+[m[32mh11==0.16.0[m
[32m+[m[32mh2==3.2.0[m
[32m+[m[32mh5py==3.12.1[m
[32m+[m[32mhalo==0.0.31[m
[32m+[m[32mhpack==3.0.0[m
[32m+[m[32mhstspreload==2024.10.1[m
[32m+[m[32mhttpcore==1.0.9[m
[32m+[m[32mhttpx==0.27.0[m
[32m+[m[32mhuggingface-hub==0.26.1[m
[32m+[m[32mhumanfriendly==10.0[m
[32m+[m[32mhyperframe==5.2.0[m
[32m+[m[32midna==2.10[m
[32m+[m[32mimageio==2.34.0[m
[32m+[m[32mimageio-ffmpeg==0.4.9[m
[32m+[m[32mimportlib_metadata==8.5.0[m
[32m+[m[32mimportlib_resources==6.4.5[m
[32m+[m[32miniconfig==2.0.0[m
[32m+[m[32mintel-openmp==2021.4.0[m
[32m+[m[32mipykernel==6.29.5[m
[32m+[m[32mipython==8.18.1[m
[32m+[m[32misoduration==20.11.0[m
[32m+[m[32misort==5.13.2[m
[32m+[m[32mitsdangerous==2.1.2[m
[32m+[m[32mjedi==0.19.1[m
[32m+[m[32mJinja2==3.1.2[m
[32m+[m[32mjiter==0.5.0[m
[32m+[m[32mjiwer==3.0.5[m
[32m+[m[32mjoblib==1.2.0[m
[32m+[m[32mjson5==0.9.25[m
[32m+[m[32mjsonpatch==1.33[m
[32m+[m[32mjsonpointer==3.0.0[m
[32m+[m[32mjsonschema==4.23.0[m
[32m+[m[32mjsonschema-specifications==2024.10.1[m
[32m+[m[32mjupyter-events==0.10.0[m
[32m+[m[32mjupyter-lsp==2.2.5[m
[32m+[m[32mjupyter_client==8.6.3[m
[32m+[m[32mjupyter_core==5.7.2[m
[32m+[m[32mjupyter_server==2.14.2[m
[32m+[m[32mjupyter_server_terminals==0.5.3[m
[32m+[m[32mjupyterlab==4.2.5[m
[32m+[m[32mjupyterlab_pygments==0.3.0[m
[32m+[m[32mjupyterlab_server==2.27.3[m
[32m+[m[32mkagglehub==0.3.12[m
[32m+[m[32mkeras==3.6.0[m
[32m+[m[32mkiwisolver==1.4.4[m
[32m+[m[32mlangchain==0.2.17[m
[32m+[m[32mlangchain-core==0.2.43[m
[32m+[m[32mlangchain-text-splitters==0.2.4[m
[32m+[m[32mlangsmith==0.1.147[m
[32m+[m[32mlazy_loader==0.4[m
[32m+[m[32mlibclang==18.1.1[m
[32m+[m[32mlibretranslatepy==2.1.1[m
[32m+[m[32mlibrosa==0.11.0[m
[32m+[m[32mlitellm==1.49.7[m
[32m+[m[32mllvmlite==0.43.0[m
[32m+[m[32mlog-symbols==0.0.14[m
[32m+[m[32mlxml==5.3.0[m
[32m+[m[32mMarkdown==3.7[m
[32m+[m[32mmarkdown-it-py==3.0.0[m
[32m+[m[32mMarkupSafe==2.1.1[m
[32m+[m[32mmatplotlib==3.6.2[m
[32m+[m[32mmatplotlib-inline==0.1.6[m
[32m+[m[32mmccabe==0.7.0[m
[32m+[m[32mmdurl==0.1.2[m
[32m+[m[32mmistune==3.0.2[m
[32m+[m[32mmkl==2021.4.0[m
[32m+[m[32mml-dtypes==0.4.1[m
[32m+[m[32mmore-itertools==10.5.0[m
[32m+[m[32mMouseInfo==0.1.3[m
[32m+[m[32mmoviepy==1.0.3[m
[32m+[m[32mmpmath==1.3.0[m
[32m+[m[32mmsgpack==1.1.0[m
[32m+[m[32mmultidict==6.1.0[m
[32m+[m[32mmultiprocess==0.70.16[m
[32m+[m[32mmypy-extensions==1.0.0[m
[32m+[m[32mnamex==0.0.8[m
[32m+[m[32mnarwhals==1.10.0[m
[32m+[m[32mnbclient==0.10.0[m
[32m+[m[32mnbconvert==7.16.4[m
[32m+[m[32mnbformat==5.10.4[m
[32m+[m[32mnest-asyncio==1.6.0[m
[32m+[m[32mnetworkx==3.2.1[m
[32m+[m[32mnltk==3.9.1[m
[32m+[m[32mnotebook_shim==0.2.4[m
[32m+[m[32mnumba==0.60.0[m
[32m+[m[32mnumpy==1.26.4[m
[32m+[m[32monnxruntime==1.19.2[m
[32m+[m[32mopenai==1.51.0[m
[32m+[m[32mopenai-whisper==20240930[m
[32m+[m[32mopencv-contrib-python==4.9.0.80[m
[32m+[m[32mopencv-python==4.6.0.66[m
[32m+[m[32mopenwakeword==0.6.0[m
[32m+[m[32mopt_einsum==3.4.0[m
[32m+[m[32moptree==0.13.1[m
[32m+[m[32morjson==3.10.10[m
[32m+[m[32moutcome==1.2.0[m
[32m+[m[32moverrides==7.7.0[m
[32m+[m[32mpackaging==24.1[m
[32m+[m[32mpafy==0.5.5[m
[32m+[m[32mpandas==1.5.1[m
[32m+[m[32mpandocfilters==1.5.1[m
[32m+[m[32mparso==0.8.3[m
[32m+[m[32mpathspec==0.12.1[m
[32m+[m[32mpickle-mixin==1.0.2[m
[32m+[m[32mPillow==9.3.0[m
[32m+[m[32mplatformdirs==4.2.0[m
[32m+[m[32mpluggy==1.5.0[m
[32m+[m[32mpooch==1.8.2[m
[32m+[m[32mproglog==0.1.10[m
[32m+[m[32mprometheus_client==0.21.0[m
[32m+[m[32mprompt-toolkit==3.0.43[m
[32m+[m[32mpropcache==0.2.1[m
[32m+[m[32mprotobuf==5.28.3[m
[32m+[m[32mpsutil==6.0.0[m
[32m+[m[32mpure-eval==0.2.2[m
[32m+[m[32mpvporcupine==1.9.5[m
[32m+[m[32mpy-cpuinfo==9.0.0[m
[32m+[m[32mpyarrow==19.0.1[m
[32m+[m[32mPyAudio==0.2.14[m
[32m+[m[32mPyAutoGUI==0.9.53[m
[32m+[m[32mpycodestyle==2.12.1[m
[32m+[m[32mpycparser==2.21[m
[32m+[m[32mpydantic==2.4.2[m
[32m+[m[32mpydantic_core==2.10.1[m
[32m+[m[32mpydub==0.25.1[m
[32m+[m[32mpyflakes==3.2.0[m
[32m+[m[32mPyGetWindow==0.0.9[m
[32m+[m[32mPygments==2.17.2[m
[32m+[m[32mpyjokes==0.6.0[m
[32m+[m[32mPyMsgBox==1.0.9[m
[32m+[m[32mpyparsing==3.0.9[m
[32m+[m[32mpyperclip==1.8.2[m
[32m+[m[32mpypiwin32==223[m
[32m+[m[32mpyreadline3==3.5.4[m
[32m+[m[32mPyRect==0.2.0[m
[32m+[m[32mPyScreeze==0.1.28[m
[32m+[m[32mpyserial==3.5[m
[32m+[m[32mPySocks==1.7.1[m
[32m+[m[32mpytest==8.3.4[m
[32m+[m[32mpytest-cov==6.0.0[m
[32m+[m[32mpython-dateutil==2.8.2[m
[32m+[m[32mpython-dotenv==1.0.1[m
[32m+[m[32mpython-json-logger==2.0.7[m
[32m+[m[32mpython-multipart==0.0.12[m
[32m+[m[32mpython-vlc==3.0.18121[m
[32m+[m[32mpyttsx3==2.90[m
[32m+[m[32mpytweening==1.0.4[m
[32m+[m[32mpytz==2022.6[m
[32m+[m[32mpywhatkit==5.4[m
[32m+[m[32mpywin32==305[m
[32m+[m[32mpywinpty==2.0.14[m
[32m+[m[32mPyYAML==6.0.2[m
[32m+[m[32mpyzmq==26.2.0[m
[32m+[m[32mRapidFuzz==3.12.1[m
[32m+[m[32mRealtimeSTT==0.3.0[m
[32m+[m[32mreferencing==0.35.1[m
[32m+[m[32mregex==2024.9.11[m
[32m+[m[32mrequests==2.32.3[m
[32m+[m[32mrequests-toolbelt==1.0.0[m
[32m+[m[32mrfc3339-validator==0.1.4[m
[32m+[m[32mrfc3986==1.5.0[m
[32m+[m[32mrfc3986-validator==0.1.1[m
[32m+[m[32mrich==13.9.3[m
[32m+[m[32mrpds-py==0.20.0[m
[32m+[m[32mruff==0.7.1[m
[32m+[m[32msafetensors==0.5.2[m
[32m+[m[32mscikit-learn==1.1.3[m
[32m+[m[32mscipy==1.12.0[m
[32m+[m[32mseaborn==0.12.1[m
[32m+[m[32mselenium==4.7.2[m
[32m+[m[32msemantic-version==2.10.0[m
[32m+[m[32mSend2Trash==1.8.3[m
[32m+[m[32mshellingham==1.5.4[m
[32m+[m[32msix==1.16.0[m
[32m+[m[32msklearn==0.0.post1[m
[32m+[m[32msniffio==1.3.0[m
[32m+[m[32msortedcontainers==2.4.0[m
[32m+[m[32msoundfile==0.13.1[m
[32m+[m[32msoupsieve==2.3.2.post1[m
[32m+[m[32msoxr==0.5.0.post1[m
[32m+[m[32mSpeechRecognition==3.9.0[m
[32m+[m[32mspinners==0.0.24[m
[32m+[m[32mSQLAlchemy==2.0.36[m
[32m+[m[32mstack-data==0.6.3[m
[32m+[m[32mstarlette==0.41.0[m
[32m+[m[32msympy==1.13.1[m
[32m+[m[32mtbb==2021.13.1[m
[32m+[m[32mtenacity==8.5.0[m
[32m+[m[32mtensorboard==2.18.0[m
[32m+[m[32mtensorboard-data-server==0.7.2[m
[32m+[m[32mtensorflow==2.18.0[m
[32m+[m[32mtensorflow-io-gcs-filesystem==0.31.0[m
[32m+[m[32mtensorflow_intel==2.18.0[m
[32m+[m[32mtermcolor==2.5.0[m
[32m+[m[32mterminado==0.18.1[m
[32m+[m[32mthreadpoolctl==3.1.0[m
[32m+[m[32mtiktoken==0.7.0[m
[32m+[m[32mtinycss2==1.4.0[m
[32m+[m[32mtokenizers==0.21.0[m
[32m+[m[32mtomli==2.0.2[m
[32m+[m[32mtomlkit==0.12.0[m
[32m+[m[32mtorch==2.6.0+cu118[m
[32m+[m[32mtorchaudio==2.6.0[m
[32m+[m[32mtorchvision==0.21.0+cu118[m
[32m+[m[32mtornado==6.4.1[m
[32m+[m[32mtqdm==4.67.1[m
[32m+[m[32mtraitlets==5.14.1[m
[32m+[m[32mtransformers==4.48.1[m
[32m+[m[32mtranslate==3.6.1[m
[32m+[m[32mtrio==0.22.0[m
[32m+[m[32mtrio-websocket==0.9.2[m
[32m+[m[32mtyper==0.12.5[m
[32m+[m[32mtypes-python-dateutil==2.9.0.20241003[m
[32m+[m[32mtyping_extensions==4.12.2[m
[32m+[m[32muri-template==1.3.0[m
[32m+[m[32murllib3==2.2.3[m
[32m+[m[32muvicorn==0.32.0[m
[32m+[m[32mvirtualenv==20.25.1[m
[32m+[m[32mwaitress==2.1.2[m
[32m+[m[32mwcwidth==0.2.13[m
[32m+[m[32mwebcolors==24.8.0[m
[32m+[m[32mwebencodings==0.5.1[m
[32m+[m[32mwebrtcvad==2.0.10[m
[32m+[m[32mwebsocket-client==1.8.0[m
[32m+[m[32mwebsockets==11.0.3[m
[32m+[m[32mWerkzeug==3.1.3[m
[32m+[m[32mwget==3.2[m
[32m+[m[32mwhisper==1.1.10[m
[32m+[m[32mwikipedia==1.4.0[m
[32m+[m[32mwordcloud==1.9.4[m
[32m+[m[32mwrapt==1.16.0[m
[32m+[m[32mwsproto==1.2.0[m
[32m+[m[32mxxhash==3.5.0[m
[32m+[m[32myarl==1.18.3[m
[32m+[m[32myoutube-dl==2021.12.17[m
[32m+[m[32mzipp==3.21.0[m
[1mdiff --git a/backend/test/Scripts/Activate.ps1 b/backend/test/Scripts/Activate.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..b785b94[m
[1m--- /dev/null[m
[1m+++ b/backend/test/Scripts/Activate.ps1[m
[36m@@ -0,0 +1,502 @@[m
[32m+[m[32m<#[m
[32m+[m[32m.Synopsis[m
[32m+[m[32mActivate a Python virtual environment for the current PowerShell session.[m
[32m+[m
[32m+[m[32m.Description[m
[32m+[m[32mPushes the python executable for a virtual environment to the front of the[m
[32m+[m[32m$Env:PATH environment variable and sets the prompt to signify that you are[m
[32m+[m[32min a Python virtual environment. Makes use of the command line switches as[m
[32m+[m[32mwell as the `pyvenv.cfg` file values present in the virtual environment.[m
[32m+[m
[32m+[m[32m.Parameter VenvDir[m
[32m+[m[32mPath to the directory that contains the virtual environment to activate. The[m
[32m+[m[32mdefault value for this is the parent of the directory that the Activate.ps1[m
[32m+[m[32mscript is located within.[m
[32m+[m
[32m+[m[32m.Parameter Prompt[m
[32m+[m[32mThe prompt prefix to display when this virtual environment is activated. By[m
[32m+[m[32mdefault, this prompt is the name of the virtual environment folder (VenvDir)[m
[32m+[m[32msurrounded by parentheses and followed by a single space (ie. '(.venv) ').[m
[32m+[m
[32m+[m[32m.Example[m
[32m+[m[32mActivate.ps1[m
[32m+[m[32mActivates the Python virtual environment that contains the Activate.ps1 script.[m
[32m+[m
[32m+[m[32m.Example[m
[32m+[m[32mActivate.ps1 -Verbose[m
[32m+[m[32mActivates the Python virtual environment that contains the Activate.ps1 script,[m
[32m+[m[32mand shows extra information about the activation as it executes.[m
[32m+[m
[32m+[m[32m.Example[m
[32m+[m[32mActivate.ps1 -VenvDir C:\Users\MyUser\Common\.venv[m
[32m+[m[32mActivates the Python virtual environment located in the specified location.[m
[32m+[m
[32m+[m[32m.Example[m
[32m+[m[32mActivate.ps1 -Prompt "MyPython"[m
[32m+[m[32mActivates the Python virtual environment that contains the Activate.ps1 script,[m
[32m+[m[32mand prefixes the current prompt with the specified string (surrounded in[m
[32m+[m[32mparentheses) while the virtual environment is active.[m
[32m+[m
[32m+[m[32m.Notes[m
[32m+[m[32mOn Windows, it may be required to enable this Activate.ps1 script by setting the[m
[32m+[m[32mexecution policy for the user. You can do this by issuing the following PowerShell[m
[32m+[m[32mcommand:[m
[32m+[m
[32m+[m[32mPS C:\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser[m
[32m+[m
[32m+[m[32mFor more information on Execution Policies:[m[41m [m
[32m+[m[32mhttps://go.microsoft.com/fwlink/?LinkID=135170[m
[32m+[m
[32m+[m[32m#>[m
[32m+[m[32mParam([m
[32m+[m[32m    [Parameter(Mandatory = $false)][m
[32m+[m[32m    [String][m
[32m+[m[32m    $VenvDir,[m
[32m+[m[32m    [Parameter(Mandatory = $false)][m
[32m+[m[32m    [String][m
[32m+[m[32m    $Prompt[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m<# Function declarations --------------------------------------------------- #>[m
[32m+[m
[32m+[m[32m<#[m
[32m+[m[32m.Synopsis[m
[32m+[m[32mRemove all shell session elements added by the Activate script, including the[m
[32m+[m[32maddition of the virtual environment's Python executable from the beginning of[m
[32m+[m[32mthe PATH variable.[m
[32m+[m
[32m+[m[32m.Parameter NonDestructive[m
[32m+[m[32mIf present, do not remove this function from the global namespace for the[m
[32m+[m[32msession.[m
[32m+[m
[32m+[m[32m#>[m
[32m+[m[32mfunction global:deactivate ([switch]$NonDestructive) {[m
[32m+[m[32m    # Revert to original values[m
[32m+[m
[32m+[m[32m    # The prior prompt:[m
[32m+[m[32m    if (Test-Path -Path Function:_OLD_VIRTUAL_PROMPT) {[m
[32m+[m[32m        Copy-Item -Path Function:_OLD_VIRTUAL_PROMPT -Destination Function:prompt[m
[32m+[m[32m        Remove-Item -Path Function:_OLD_VIRTUAL_PROMPT[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    # The prior PYTHONHOME:[m
[32m+[m[32m    if (Test-Path -Path Env:_OLD_VIRTUAL_PYTHONHOME) {[m
[32m+[m[32m        Copy-Item -Path Env:_OLD_VIRTUAL_PYTHONHOME -Destination Env:PYTHONHOME[m
[32m+[m[32m        Remove-Item -Path Env:_OLD_VIRTUAL_PYTHONHOME[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    # The prior PATH:[m
[32m+[m[32m    if (Test-Path -Path Env:_OLD_VIRTUAL_PATH) {[m
[32m+[m[32m        Copy-Item -Path Env:_OLD_VIRTUAL_PATH -Destination Env:PATH[m
[32m+[m[32m        Remove-Item -Path Env:_OLD_VIRTUAL_PATH[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    # Just remove the VIRTUAL_ENV altogether:[m
[32m+[m[32m    if (Test-Path -Path Env:VIRTUAL_ENV) {[m
[32m+[m[32m        Remove-Item -Path env:VIRTUAL_ENV[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    # Just remove VIRTUAL_ENV_PROMPT altogether.[m
[32m+[m[32m    if (Test-Path -Path Env:VIRTUAL_ENV_PROMPT) {[m
[32m+[m[32m        Remove-Item -Path env:VIRTUAL_ENV_PROMPT[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    # Just remove the _PYTHON_VENV_PROMPT_PREFIX altogether:[m
[32m+[m[32m    if (Get-Variable -Name "_PYTHON_VENV_PROMPT_PREFIX" -ErrorAction SilentlyContinue) {[m
[32m+[m[32m        Remove-Variable -Name _PYTHON_VENV_PROMPT_PREFIX -Scope Global -Force[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    # Leave deactivate function in the global namespace if requested:[m
[32m+[m[32m    if (-not $NonDestructive) {[m
[32m+[m[32m        Remove-Item -Path function:deactivate[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m<#[m
[32m+[m[32m.Description[m
[32m+[m[32mGet-PyVenvConfig parses the values from the pyvenv.cfg file located in the[m
[32m+[m[32mgiven folder, and returns them in a map.[m
[32m+[m
[32m+[m[32mFor each line in the pyvenv.cfg file, if that line can be parsed into exactly[m
[32m+[m[32mtwo strings separated by `=` (with any amount of whitespace surrounding the =)[m
[32m+[m[32mthen it is considered a `key = value` line. The left hand string is the key,[m
[32m+[m[32mthe right hand is the value.[m
[32m+[m
[32m+[m[32mIf the value starts with a `'` or a `"` then the first and last character is[m
[32m+[m[32mstripped from the value before being captured.[m
[32m+[m
[32m+[m[32m.Parameter ConfigDir[m
[32m+[m[32mPath to the directory that contains the `pyvenv.cfg` file.[m
[32m+[m[32m#>[m
[32m+[m[32mfunction Get-PyVenvConfig([m
[32m+[m[32m    [String][m
[32m+[m[32m    $ConfigDir[m
[32m+[m[32m) {[m
[32m+[m[32m    Write-Verbose "Given ConfigDir=$ConfigDir, obtain values in pyvenv.cfg"[m
[32m+[m
[32m+[m[32m    # Ensure the file exists, and issue a warning if it doesn't (but still allow the function to continue).[m
[32m+[m[32m    $pyvenvConfigPath = Join-Path -Resolve -Path $ConfigDir -ChildPath 'pyvenv.cfg' -ErrorAction Continue[m
[32m+[m
[32m+[m[32m    # An empty map will be returned if no config file is found.[m
[32m+[m[32m    $pyvenvConfig = @{ }[m
[32m+[m
[32m+[m[32m    if ($pyvenvConfigPath) {[m
[32m+[m
[32m+[m[32m        Write-Verbose "File exists, parse `key = value` lines"[m
[32m+[m[32m        $pyvenvConfigContent = Get-Content -Path $pyvenvConfigPath[m
[32m+[m
[32m+[m[32m        $pyvenvConfigContent | ForEach-Object {[m
[32m+[m[32m            $keyval = $PSItem -split "\s*=\s*", 2[m
[32m+[m[32m            if ($keyval[0] -and $keyval[1]) {[m
[32m+[m[32m                $val = $keyval[1][m
[32m+[m
[32m+[m[32m                # Remove extraneous quotations around a string value.[m
[32m+[m[32m                if ("'""".Contains($val.Substring(0, 1))) {[m
[32m+[m[32m                    $val = $val.Substring(1, $val.Length - 2)[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                $pyvenvConfig[$keyval[0]] = $val[m
[32m+[m[32m                Write-Verbose "Adding Key: '$($keyval[0])'='$val'"[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    return $pyvenvConfig[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m<# Begin Activate script --------------------------------------------------- #>[m
[32m+[m
[32m+[m[32m# Determine the containing directory of this script[m
[32m+[m[32m$VenvExecPath = Split-Path -Parent $MyInvocation.MyCommand.Definition[m
[32m+[m[32m$VenvExecDir = Get-Item -Path $VenvExecPath[m
[32m+[m
[32m+[m[32mWrite-Verbose "Activation script is located in path: '$VenvExecPath'"[m
[32m+[m[32mWrite-Verbose "VenvExecDir Fullname: '$($VenvExecDir.FullName)"[m
[32m+[m[32mWrite-Verbose "VenvExecDir Name: '$($VenvExecDir.Name)"[m
[32m+[m
[32m+[m[32m# Set values required in priority: CmdLine, ConfigFile, Default[m
[32m+[m[32m# First, get the location of the virtual environment, it might not be[m
[32m+[m[32m# VenvExecDir if specified on the command line.[m
[32m+[m[32mif ($VenvDir) {[m
[32m+[m[32m    Write-Verbose "VenvDir given as parameter, using '$VenvDir' to determine values"[m
[32m+[m[32m}[m
[32m+[m[32melse {[m
[32m+[m[32m    Write-Verbose "VenvDir not given as a parameter, using parent directory name as VenvDir."[m
[32m+[m[32m    $VenvDir = $VenvExecDir.Parent.FullName.TrimEnd("\\/")[m
[32m+[m[32m    Write-Verbose "VenvDir=$VenvDir"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# Next, read the `pyvenv.cfg` file to determine any required value such[m
[32m+[m[32m# as `prompt`.[m
[32m+[m[32m$pyvenvCfg = Get-PyVenvConfig -ConfigDir $VenvDir[m
[32m+[m
[32m+[m[32m# Next, set the prompt from the command line, or the config file, or[m
[32m+[m[32m# just use the name of the virtual environment folder.[m
[32m+[m[32mif ($Prompt) {[m
[32m+[m[32m    Write-Verbose "Prompt specified as argument, using '$Prompt'"[m
[32m+[m[32m}[m
[32m+[m[32melse {[m
[32m+[m[32m    Write-Verbose "Prompt not specified as argument to script, checking pyvenv.cfg value"[m
[32m+[m[32m    if ($pyvenvCfg -and $pyvenvCfg['prompt']) {[m
[32m+[m[32m        Write-Verbose "  Setting based on value in pyvenv.cfg='$($pyvenvCfg['prompt'])'"[m
[32m+[m[32m        $Prompt = $pyvenvCfg['prompt'];[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m        Write-Verbose "  Setting prompt based on parent's directory's name. (Is the directory name passed to venv module when creating the virtual environment)"[m
[32m+[m[32m        Write-Verbose "  Got leaf-name of $VenvDir='$(Split-Path -Path $venvDir -Leaf)'"[m
[32m+[m[32m        $Prompt = Split-Path -Path $venvDir -Leaf[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mWrite-Verbose "Prompt = '$Prompt'"[m
[32m+[m[32mWrite-Verbose "VenvDir='$VenvDir'"[m
[32m+[m
[32m+[m[32m# Deactivate any currently active virtual environment, but leave the[m
[32m+[m[32m# deactivate function in place.[m
[32m+[m[32mdeactivate -nondestructive[m
[32m+[m
[32m+[m[32m# Now set the environment variable VIRTUAL_ENV, used by many tools to determine[m
[32m+[m[32m# that there is an activated venv.[m
[32m+[m[32m$env:VIRTUAL_ENV = $VenvDir[m
[32m+[m
[32m+[m[32mif (-not $Env:VIRTUAL_ENV_DISABLE_PROMPT) {[m
[32m+[m
[32m+[m[32m    Write-Verbose "Setting prompt to '$Prompt'"[m
[32m+[m
[32m+[m[32m    # Set the prompt to include the env name[m
[32m+[m[32m    # Make sure _OLD_VIRTUAL_PROMPT is global[m
[32m+[m[32m    function global:_OLD_VIRTUAL_PR